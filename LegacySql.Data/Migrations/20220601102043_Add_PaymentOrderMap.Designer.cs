// <auto-generated />
using System;
using LegacySql.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LegacySql.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220601102043_Add_PaymentOrderMap")]
    partial class Add_PaymentOrderMap
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("public")
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LegacySql.Data.Models.ActivityTypeMapEF", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ErpGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("LegacyId")
                        .HasColumnType("integer");

                    b.Property<Guid>("MapGuid")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ErpGuid")
                        .IsUnique();

                    b.HasIndex("LegacyId")
                        .IsUnique();

                    b.ToTable("ActivityTypes", "public");
                });

            modelBuilder.Entity("LegacySql.Data.Models.BankPaymentMapEF", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ErpGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("LegacyId")
                        .HasColumnType("integer");

                    b.Property<Guid>("MapGuid")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ErpGuid")
                        .IsUnique();

                    b.HasIndex("LegacyId")
                        .IsUnique();

                    b.ToTable("BankPaymentMaps", "public");
                });

            modelBuilder.Entity("LegacySql.Data.Models.CashboxMapEF", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<Guid?>("ErpGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("LegacyId")
                        .HasColumnType("integer");

                    b.Property<Guid>("MapGuid")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ErpGuid")
                        .IsUnique();

                    b.HasIndex("LegacyId")
                        .IsUnique();

                    b.ToTable("CashboxMaps", "public");
                });

            modelBuilder.Entity("LegacySql.Data.Models.CashboxPaymentMapEF", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ErpGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("LegacyId")
                        .HasColumnType("integer");

                    b.Property<Guid>("MapGuid")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ErpGuid")
                        .IsUnique();

                    b.HasIndex("LegacyId")
                        .IsUnique();

                    b.ToTable("CashboxPaymentMaps", "public");
                });

            modelBuilder.Entity("LegacySql.Data.Models.ClassMapEF", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ErpGuid")
                        .HasColumnType("uuid");

                    b.Property<string>("LegacyTitle")
                        .HasColumnType("text");

                    b.Property<Guid>("MapGuid")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ErpGuid")
                        .IsUnique();

                    b.HasIndex("LegacyTitle")
                        .IsUnique();

                    b.ToTable("ClassMaps", "public");
                });

            modelBuilder.Entity("LegacySql.Data.Models.ClientMapEF", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ErpGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("LegacyId")
                        .HasColumnType("integer");

                    b.Property<Guid>("MapGuid")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ErpGuid")
                        .IsUnique();

                    b.HasIndex("LegacyId")
                        .IsUnique();

                    b.ToTable("ClientMaps", "public");
                });

            modelBuilder.Entity("LegacySql.Data.Models.ClientOrderDeliveryMapEF", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ErpGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("LegacyId")
                        .HasColumnType("integer");

                    b.Property<Guid>("MapGuid")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ErpGuid")
                        .IsUnique();

                    b.HasIndex("LegacyId")
                        .IsUnique();

                    b.ToTable("ClientOrderDeliveryMaps", "public");
                });

            modelBuilder.Entity("LegacySql.Data.Models.ClientOrderMapEF", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ErpGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("LegacyId")
                        .HasColumnType("integer");

                    b.Property<Guid>("MapGuid")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ErpGuid", "LegacyId")
                        .IsUnique();

                    b.ToTable("ClientOrderMaps", "public");
                });

            modelBuilder.Entity("LegacySql.Data.Models.DepartmentMapEF", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ErpGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("LegacyId")
                        .HasColumnType("integer");

                    b.Property<Guid>("MapGuid")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ErpGuid")
                        .IsUnique();

                    b.HasIndex("LegacyId")
                        .IsUnique();

                    b.ToTable("DepartmentMaps", "public");
                });

            modelBuilder.Entity("LegacySql.Data.Models.EmployeeMapEF", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ErpGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("LegacyId")
                        .HasColumnType("integer");

                    b.Property<Guid>("MapGuid")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ErpGuid")
                        .IsUnique();

                    b.HasIndex("LegacyId")
                        .IsUnique();

                    b.ToTable("EmployeeMaps", "public");
                });

            modelBuilder.Entity("LegacySql.Data.Models.ErpChangedEF", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("LegacyId")
                        .HasColumnType("integer");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LegacyId", "Type")
                        .IsUnique();

                    b.ToTable("ErpChanged", "public");
                });

            modelBuilder.Entity("LegacySql.Data.Models.ErpNotFullMappedEF", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("ErpId")
                        .HasColumnType("uuid");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.Property<string>("Why")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ErpId", "Type")
                        .IsUnique();

                    b.ToTable("ErpNotFullMapped", "public");
                });

            modelBuilder.Entity("LegacySql.Data.Models.ExecutingJobEF", b =>
                {
                    b.Property<string>("JobType")
                        .HasColumnType("text");

                    b.HasKey("JobType");

                    b.HasIndex("JobType")
                        .IsUnique();

                    b.ToTable("ExecutingJobs", "public");
                });

            modelBuilder.Entity("LegacySql.Data.Models.LastChangedDateEF", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("EntityType")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("LastChangedDates", "public");
                });

            modelBuilder.Entity("LegacySql.Data.Models.ManufacturerMapEF", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ErpGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("LegacyId")
                        .HasColumnType("integer");

                    b.Property<string>("LegacyTitle")
                        .HasColumnType("text");

                    b.Property<Guid>("MapGuid")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ErpGuid")
                        .IsUnique();

                    b.HasIndex("LegacyId")
                        .IsUnique();

                    b.ToTable("ManufacturerMaps", "public");
                });

            modelBuilder.Entity("LegacySql.Data.Models.MarketSegmentMapEF", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ErpGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("LegacyId")
                        .HasColumnType("integer");

                    b.Property<Guid>("MapGuid")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ErpGuid")
                        .IsUnique();

                    b.HasIndex("LegacyId")
                        .IsUnique();

                    b.ToTable("MarketSegmentMaps", "public");
                });

            modelBuilder.Entity("LegacySql.Data.Models.NotFullMappedEF", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("InnerId")
                        .HasColumnType("integer");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("Why")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Type");

                    b.HasIndex("InnerId", "Type")
                        .IsUnique();

                    b.ToTable("NotFullMapped", "public");
                });

            modelBuilder.Entity("LegacySql.Data.Models.PartnerProductGroupMapEF", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ErpGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("LegacyId")
                        .HasColumnType("integer");

                    b.Property<Guid>("MapGuid")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ErpGuid")
                        .IsUnique();

                    b.HasIndex("LegacyId")
                        .IsUnique();

                    b.ToTable("PartnerProductGroupMaps", "public");
                });

            modelBuilder.Entity("LegacySql.Data.Models.PaymentOrderMapEF", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ErpGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("LegacyId")
                        .HasColumnType("integer");

                    b.Property<Guid>("MapGuid")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ErpGuid")
                        .IsUnique();

                    b.HasIndex("LegacyId")
                        .IsUnique();

                    b.ToTable("PaymentOrderMaps", "public");
                });

            modelBuilder.Entity("LegacySql.Data.Models.PhysicalPersonMapEF", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ErpGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("LegacyId")
                        .HasColumnType("integer");

                    b.Property<Guid>("MapGuid")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ErpGuid")
                        .IsUnique();

                    b.HasIndex("LegacyId")
                        .IsUnique();

                    b.ToTable("PhysicalPersonMaps", "public");
                });

            modelBuilder.Entity("LegacySql.Data.Models.PriceConditionMapEF", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ErpGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("LegacyId")
                        .HasColumnType("integer");

                    b.Property<Guid>("MapGuid")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ErpGuid")
                        .IsUnique();

                    b.HasIndex("LegacyId")
                        .IsUnique();

                    b.ToTable("PriceConditionMaps", "public");
                });

            modelBuilder.Entity("LegacySql.Data.Models.ProductMapEF", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ErpGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("LegacyId")
                        .HasColumnType("integer");

                    b.Property<Guid>("MapGuid")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ErpGuid")
                        .IsUnique();

                    b.HasIndex("LegacyId")
                        .IsUnique();

                    b.ToTable("ProductMaps", "public");
                });

            modelBuilder.Entity("LegacySql.Data.Models.ProductPriceConditionMapEF", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ErpGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("LegacyId")
                        .HasColumnType("integer");

                    b.Property<Guid>("MapGuid")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ErpGuid")
                        .IsUnique();

                    b.HasIndex("LegacyId")
                        .IsUnique();

                    b.ToTable("ProductPriceConditionMaps", "public");
                });

            modelBuilder.Entity("LegacySql.Data.Models.ProductRefundMapEF", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ErpGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("LegacyId")
                        .HasColumnType("integer");

                    b.Property<Guid>("MapGuid")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ErpGuid")
                        .IsUnique();

                    b.HasIndex("LegacyId")
                        .IsUnique();

                    b.ToTable("ProductRefundMaps", "public");
                });

            modelBuilder.Entity("LegacySql.Data.Models.ProductSubtypeMapEF", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ErpGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("LegacyId")
                        .HasColumnType("integer");

                    b.Property<Guid>("MapGuid")
                        .HasColumnType("uuid");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ErpGuid")
                        .IsUnique();

                    b.HasIndex("LegacyId")
                        .IsUnique();

                    b.HasIndex("Title");

                    b.ToTable("ProductSubtypeMaps", "public");
                });

            modelBuilder.Entity("LegacySql.Data.Models.ProductTypeCategoryGroupMapEF", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ErpGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("LegacyId")
                        .HasColumnType("integer");

                    b.Property<Guid>("MapGuid")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ErpGuid")
                        .IsUnique();

                    b.HasIndex("LegacyId")
                        .IsUnique();

                    b.ToTable("ProductTypeCategoryGroupMaps", "public");
                });

            modelBuilder.Entity("LegacySql.Data.Models.ProductTypeCategoryMapEF", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ErpGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("LegacyId")
                        .HasColumnType("integer");

                    b.Property<Guid>("MapGuid")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ErpGuid")
                        .IsUnique();

                    b.HasIndex("LegacyId")
                        .IsUnique();

                    b.ToTable("ProductTypeCategoryMaps", "public");
                });

            modelBuilder.Entity("LegacySql.Data.Models.ProductTypeCategoryParameterMapEF", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ErpGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("LegacyId")
                        .HasColumnType("integer");

                    b.Property<Guid>("MapGuid")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ErpGuid")
                        .IsUnique();

                    b.HasIndex("LegacyId")
                        .IsUnique();

                    b.ToTable("ProductTypeCategoryParameterMaps", "public");
                });

            modelBuilder.Entity("LegacySql.Data.Models.ProductTypeMapEF", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ErpGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("LegacyId")
                        .HasColumnType("integer");

                    b.Property<Guid>("MapGuid")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ErpGuid")
                        .IsUnique();

                    b.HasIndex("LegacyId")
                        .IsUnique();

                    b.ToTable("ProductTypeMaps", "public");
                });

            modelBuilder.Entity("LegacySql.Data.Models.PurchaseMapEF", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ErpGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("LegacyId")
                        .HasColumnType("integer");

                    b.Property<Guid>("MapGuid")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ErpGuid")
                        .IsUnique();

                    b.HasIndex("LegacyId")
                        .IsUnique();

                    b.ToTable("PurchaseMaps", "public");
                });

            modelBuilder.Entity("LegacySql.Data.Models.ReconciliationActMapEF", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ErpGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("LegacyId")
                        .HasColumnType("integer");

                    b.Property<Guid>("MapGuid")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ErpGuid")
                        .IsUnique();

                    b.HasIndex("LegacyId")
                        .IsUnique();

                    b.ToTable("ReconciliationActMaps", "public");
                });

            modelBuilder.Entity("LegacySql.Data.Models.RejectMapEF", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ErpGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("LegacyId")
                        .HasColumnType("integer");

                    b.Property<Guid>("MapGuid")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ErpGuid")
                        .IsUnique();

                    b.HasIndex("LegacyId")
                        .IsUnique();

                    b.ToTable("RejectMaps", "public");
                });

            modelBuilder.Entity("LegacySql.Data.Models.RelatedProductMapEF", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ErpGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("LegacyId")
                        .HasColumnType("integer");

                    b.Property<Guid>("MapGuid")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ErpGuid")
                        .IsUnique();

                    b.HasIndex("LegacyId")
                        .IsUnique();

                    b.ToTable("RelatedProductMaps", "public");
                });

            modelBuilder.Entity("LegacySql.Data.Models.SegmentationTurnoverMapEF", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ErpGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("LegacyId")
                        .HasColumnType("integer");

                    b.Property<Guid>("MapGuid")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ErpGuid")
                        .IsUnique();

                    b.HasIndex("LegacyId")
                        .IsUnique();

                    b.ToTable("SegmentationTurnoverMaps", "public");
                });

            modelBuilder.Entity("LegacySql.Data.Models.WarehouseMapEF", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ErpGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("LegacyId")
                        .HasColumnType("integer");

                    b.Property<Guid>("MapGuid")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ErpGuid")
                        .IsUnique();

                    b.HasIndex("LegacyId")
                        .IsUnique();

                    b.ToTable("WarehouseMaps", "public");
                });
#pragma warning restore 612, 618
        }
    }
}
